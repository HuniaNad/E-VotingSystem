-- Generated by Oracle SQL Developer Data Modeler 21.4.2.059.0838
--   at:        2022-07-08 16:58:58 YEKT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE aboutus (
    abtus_id        VARCHAR2(10) NOT NULL,
    app_description VARCHAR2(256) NOT NULL,
    company_email   VARCHAR2(128) NOT NULL,
    mailing_address VARCHAR2(256),
    features        VARCHAR2(500) NOT NULL
);

ALTER TABLE aboutus ADD CONSTRAINT about_us_pk PRIMARY KEY ( abtus_id );

CREATE TABLE addedcandidaterecord (
    moderator_uid VARCHAR2(256) NOT NULL,
    candidate_uid VARCHAR2(256) NOT NULL,
    candidate_id  VARCHAR2(256) NOT NULL
);

ALTER TABLE addedcandidaterecord ADD CONSTRAINT addsv1_pk PRIMARY KEY ( moderator_uid,
                                                                        candidate_uid );

CREATE TABLE addedgroupadminrecord (
    moderator_uid VARCHAR2(256) NOT NULL,
    admin_uid     VARCHAR2(256) NOT NULL,
    admin_id      VARCHAR2(256) NOT NULL
);

ALTER TABLE addedgroupadminrecord ADD CONSTRAINT adds_pk PRIMARY KEY ( moderator_uid,
                                                                       admin_uid );

CREATE TABLE addedgrouprecord (
    moderator_uid VARCHAR2(256) NOT NULL,
    group_id      VARCHAR2(256) NOT NULL
);

ALTER TABLE addedgrouprecord ADD CONSTRAINT addsv2_pk PRIMARY KEY ( moderator_uid,
                                                                    group_id );

CREATE TABLE candidate (
    user_id      VARCHAR2(256) NOT NULL,
    candidate_id VARCHAR2(256) NOT NULL,
    position     VARCHAR2(128) NOT NULL,
    utype_id     VARCHAR2(256) NOT NULL
);

ALTER TABLE candidate ADD CONSTRAINT candidate_pk PRIMARY KEY ( user_id,
                                                                candidate_id );

ALTER TABLE candidate ADD CONSTRAINT candidate_pkv1 UNIQUE ( candidate_id );

CREATE TABLE candidateapplicants (
    candidate_uid VARCHAR2(256) NOT NULL,
    election_id   VARCHAR2(256) NOT NULL,
    election_cid  VARCHAR2(256) NOT NULL,
    candidate_id  VARCHAR2(256) NOT NULL
);

ALTER TABLE candidateapplicants ADD CONSTRAINT candidateapplicants_pk PRIMARY KEY ( candidate_uid,
                                                                                    election_id );

CREATE TABLE custom (
    election_cid VARCHAR2(256) NOT NULL,
    custom_id    VARCHAR2(256) NOT NULL
);

ALTER TABLE custom ADD CONSTRAINT custom_pk PRIMARY KEY ( election_cid );

ALTER TABLE custom ADD CONSTRAINT custom_pkv1 UNIQUE ( custom_id );

CREATE TABLE e_category (
    category_id   VARCHAR2(256) NOT NULL,
    category_type VARCHAR2(12) NOT NULL
);

ALTER TABLE e_category
    ADD CONSTRAINT ch_inh_category CHECK ( category_type IN ( 'Category', 'Custom', 'Government', 'Organization', 'Referendum' ) );

ALTER TABLE e_category ADD CONSTRAINT category_pk PRIMARY KEY ( category_id );

CREATE TABLE electedcandidates (
    user_id       VARCHAR2(256) NOT NULL,
    candidate_uid VARCHAR2(256) NOT NULL,
    voter_id      VARCHAR2(256) NOT NULL,
    candidate_id  VARCHAR2(256) NOT NULL
);

ALTER TABLE electedcandidates
    ADD CONSTRAINT elect_pk PRIMARY KEY ( user_id,
                                          candidate_uid,
                                          voter_id );

CREATE TABLE electedgroups (
    user_id  VARCHAR2(256) NOT NULL,
    group_id VARCHAR2(256) NOT NULL,
    voter_id VARCHAR2(256) NOT NULL
);

ALTER TABLE electedgroups
    ADD CONSTRAINT electv1_pk PRIMARY KEY ( user_id,
                                            group_id,
                                            voter_id );

CREATE TABLE election (
    election_cid         VARCHAR2(256) NOT NULL,
    election_id          VARCHAR2(256) NOT NULL,
    election_name        VARCHAR2(128) NOT NULL,
    election_description VARCHAR2(256) NOT NULL,
    startdate            DATE NOT NULL,
    enddate              DATE NOT NULL,
    privacy              VARCHAR2(128) NOT NULL,
    city                 VARCHAR2(128) NOT NULL,
    country              VARCHAR2(128) NOT NULL,
    moderator_uid        VARCHAR2(256) NOT NULL,
    resultdate           DATE
);

ALTER TABLE election ADD CONSTRAINT election_pk PRIMARY KEY ( election_id,
                                                              election_cid );

CREATE TABLE feedbacks (
    feedback_id          VARCHAR2(256) NOT NULL,
    feedback_description VARCHAR2(256),
    rating               INTEGER NOT NULL,
    user_id              VARCHAR2(256) NOT NULL,
    utype_id             VARCHAR2(256) NOT NULL
);

ALTER TABLE feedbacks ADD CONSTRAINT feedback_pk PRIMARY KEY ( feedback_id );

CREATE TABLE government (
    election_cid VARCHAR2(256) NOT NULL,
    party_name   VARCHAR2(128) NOT NULL,
    party_status VARCHAR2(128) NOT NULL,
    party_id     VARCHAR2(256) NOT NULL
);

ALTER TABLE government ADD CONSTRAINT government_pk PRIMARY KEY ( election_cid );

ALTER TABLE government ADD CONSTRAINT government_pkv1 UNIQUE ( party_id );

CREATE TABLE group_admin (
    user_id  VARCHAR2(256) NOT NULL,
    admin_id VARCHAR2(256) NOT NULL,
    utype_id VARCHAR2(256) NOT NULL
);

ALTER TABLE group_admin ADD CONSTRAINT group_admin_pk PRIMARY KEY ( user_id,
                                                                    admin_id );

CREATE TABLE groupapplicants (
    group_id     VARCHAR2(256) NOT NULL,
    election_id  VARCHAR2(256) NOT NULL,
    election_cid VARCHAR2(256) NOT NULL
);

ALTER TABLE groupapplicants ADD CONSTRAINT groupapplicants_pk PRIMARY KEY ( group_id,
                                                                            election_id );

CREATE TABLE moderator (
    user_id  VARCHAR2(256) NOT NULL,
    utype_id VARCHAR2(256) NOT NULL
);

ALTER TABLE moderator ADD CONSTRAINT moderator_pk PRIMARY KEY ( user_id );

CREATE TABLE organizations (
    election_cid      VARCHAR2(256) NOT NULL,
    organization_name VARCHAR2(128) NOT NULL,
    organization_type VARCHAR2(128) NOT NULL,
    organization_id   VARCHAR2(256) NOT NULL
);

ALTER TABLE organizations ADD CONSTRAINT organization_pk PRIMARY KEY ( election_cid );

ALTER TABLE organizations ADD CONSTRAINT organization_pkv1 UNIQUE ( organization_id );

CREATE TABLE party_group (
    group_id          VARCHAR2(256) NOT NULL,
    group_name        VARCHAR2(128) NOT NULL,
    group_description VARCHAR2(256) NOT NULL,
    admin_uid         VARCHAR2(256) NOT NULL,
    admin_id          VARCHAR2(256) NOT NULL
);

CREATE UNIQUE INDEX group__idx ON
    party_group (
        admin_uid
    ASC );

ALTER TABLE party_group ADD CONSTRAINT group_pk PRIMARY KEY ( group_id );

CREATE TABLE person (
    user_id      VARCHAR2(256) NOT NULL,
    cnic         VARCHAR2(15) NOT NULL,
    age          INTEGER NOT NULL,
    first_name   VARCHAR2(128) NOT NULL,
    last_name    VARCHAR2(128) NOT NULL,
    phone_number INTEGER NOT NULL,
    email        VARCHAR2(128) NOT NULL,
    password     VARCHAR2(128) NOT NULL,
    user_type    VARCHAR2(11) NOT NULL,
    abtus_id     VARCHAR2(10) NOT NULL,
    utype_id     VARCHAR2(256) NOT NULL,
    gender       VARCHAR2(10)
);

ALTER TABLE person
    ADD CONSTRAINT ch_inh_user CHECK ( user_type IN ( 'Candidate', 'Group_Admin', 'Moderator', 'User', 'Voter',
                                                      'user' ) );

ALTER TABLE person ADD CONSTRAINT user_pk PRIMARY KEY ( user_id,
                                                        utype_id );

CREATE TABLE referendum (
    election_cid  VARCHAR2(256) NOT NULL,
    statement     VARCHAR2(256) NOT NULL,
    referendum_id VARCHAR2(256) NOT NULL
);

ALTER TABLE referendum ADD CONSTRAINT referendum_pk PRIMARY KEY ( election_cid );

ALTER TABLE referendum ADD CONSTRAINT referendum_pkv1 UNIQUE ( referendum_id );

CREATE TABLE registrations (
    voter_uid    VARCHAR2(256) NOT NULL,
    election_id  VARCHAR2(256) NOT NULL,
    election_cid VARCHAR2(256) NOT NULL,
    voter_id     VARCHAR2(256) NOT NULL
);

ALTER TABLE registrations ADD CONSTRAINT registers_pk PRIMARY KEY ( voter_uid,
                                                                    election_id );

CREATE TABLE vote (
    vote_id      VARCHAR2(256) NOT NULL,
    user_id      VARCHAR2(256) NOT NULL,
    election_id  VARCHAR2(256) NOT NULL,
    election_cid VARCHAR2(256) NOT NULL,
    voter_id     VARCHAR2(256) NOT NULL
);

ALTER TABLE vote ADD CONSTRAINT vote_pk PRIMARY KEY ( vote_id );

CREATE TABLE voter (
    user_id  VARCHAR2(256) NOT NULL,
    voter_id VARCHAR2(256) NOT NULL,
    utype_id VARCHAR2(256) NOT NULL
);

ALTER TABLE voter ADD CONSTRAINT voter_pk PRIMARY KEY ( user_id,
                                                        voter_id );

ALTER TABLE addedgroupadminrecord
    ADD CONSTRAINT adds_group_admin_fk FOREIGN KEY ( admin_uid,
                                                     admin_id )
        REFERENCES group_admin ( user_id,
                                 admin_id )
            ON DELETE CASCADE;

ALTER TABLE addedgroupadminrecord
    ADD CONSTRAINT adds_moderator_fk FOREIGN KEY ( moderator_uid )
        REFERENCES moderator ( user_id )
            ON DELETE CASCADE;

ALTER TABLE addedcandidaterecord
    ADD CONSTRAINT addsv1_candidate_fk FOREIGN KEY ( candidate_uid,
                                                     candidate_id )
        REFERENCES candidate ( user_id,
                               candidate_id )
            ON DELETE CASCADE;

ALTER TABLE addedcandidaterecord
    ADD CONSTRAINT addsv1_moderator_fk FOREIGN KEY ( moderator_uid )
        REFERENCES moderator ( user_id )
            ON DELETE CASCADE;

ALTER TABLE addedgrouprecord
    ADD CONSTRAINT addsv2_group_fk FOREIGN KEY ( group_id )
        REFERENCES party_group ( group_id )
            ON DELETE CASCADE;

ALTER TABLE addedgrouprecord
    ADD CONSTRAINT addsv2_moderator_fk FOREIGN KEY ( moderator_uid )
        REFERENCES moderator ( user_id )
            ON DELETE CASCADE;

ALTER TABLE candidate
    ADD CONSTRAINT candidate_user_fk FOREIGN KEY ( user_id,
                                                   utype_id )
        REFERENCES person ( user_id,
                            utype_id )
            ON DELETE CASCADE;

ALTER TABLE candidateapplicants
    ADD CONSTRAINT capplicants_candidate_fk FOREIGN KEY ( candidate_uid,
                                                          candidate_id )
        REFERENCES candidate ( user_id,
                               candidate_id )
            ON DELETE CASCADE;

ALTER TABLE candidateapplicants
    ADD CONSTRAINT capplicants_election_fk FOREIGN KEY ( election_id,
                                                         election_cid )
        REFERENCES election ( election_id,
                              election_cid )
            ON DELETE CASCADE;

ALTER TABLE custom
    ADD CONSTRAINT custom_category_fk FOREIGN KEY ( election_cid )
        REFERENCES e_category ( category_id );

ALTER TABLE electedcandidates
    ADD CONSTRAINT elect_candidate_fk FOREIGN KEY ( candidate_uid,
                                                    candidate_id )
        REFERENCES candidate ( user_id,
                               candidate_id )
            ON DELETE CASCADE;

ALTER TABLE electedcandidates
    ADD CONSTRAINT elect_voter_fk FOREIGN KEY ( user_id,
                                                voter_id )
        REFERENCES voter ( user_id,
                           voter_id )
            ON DELETE CASCADE;

ALTER TABLE election
    ADD CONSTRAINT election_category_fk FOREIGN KEY ( election_cid )
        REFERENCES e_category ( category_id )
            ON DELETE CASCADE;

ALTER TABLE election
    ADD CONSTRAINT election_moderator_fk FOREIGN KEY ( moderator_uid )
        REFERENCES moderator ( user_id )
            ON DELETE CASCADE;

ALTER TABLE electedgroups
    ADD CONSTRAINT electv1_group_fk FOREIGN KEY ( group_id )
        REFERENCES party_group ( group_id )
            ON DELETE CASCADE;

ALTER TABLE electedgroups
    ADD CONSTRAINT electv1_voter_fk FOREIGN KEY ( user_id,
                                                  voter_id )
        REFERENCES voter ( user_id,
                           voter_id )
            ON DELETE CASCADE;

ALTER TABLE feedbacks
    ADD CONSTRAINT feedback_user_fk FOREIGN KEY ( user_id,
                                                  utype_id )
        REFERENCES person ( user_id,
                            utype_id )
            ON DELETE CASCADE;

ALTER TABLE government
    ADD CONSTRAINT government_category_fk FOREIGN KEY ( election_cid )
        REFERENCES e_category ( category_id )
            ON DELETE CASCADE;

ALTER TABLE group_admin
    ADD CONSTRAINT group_admin_user_fk FOREIGN KEY ( user_id,
                                                     utype_id )
        REFERENCES person ( user_id,
                            utype_id )
            ON DELETE CASCADE;

ALTER TABLE party_group
    ADD CONSTRAINT group_group_admin_fk FOREIGN KEY ( admin_uid,
                                                      admin_id )
        REFERENCES group_admin ( user_id,
                                 admin_id )
            ON DELETE CASCADE;

ALTER TABLE groupapplicants
    ADD CONSTRAINT groupapplicants_election_fk FOREIGN KEY ( election_id,
                                                             election_cid )
        REFERENCES election ( election_id,
                              election_cid )
            ON DELETE CASCADE;

ALTER TABLE groupapplicants
    ADD CONSTRAINT groupapplicants_group_fk FOREIGN KEY ( group_id )
        REFERENCES party_group ( group_id )
            ON DELETE CASCADE;

ALTER TABLE moderator
    ADD CONSTRAINT moderator_user_fk FOREIGN KEY ( user_id,
                                                   utype_id )
        REFERENCES person ( user_id,
                            utype_id )
            ON DELETE CASCADE;

ALTER TABLE organizations
    ADD CONSTRAINT organization_category_fk FOREIGN KEY ( election_cid )
        REFERENCES e_category ( category_id )
            ON DELETE CASCADE;

ALTER TABLE referendum
    ADD CONSTRAINT referendum_category_fk FOREIGN KEY ( election_cid )
        REFERENCES e_category ( category_id )
            ON DELETE CASCADE;

ALTER TABLE registrations
    ADD CONSTRAINT registers_election_fk FOREIGN KEY ( election_id,
                                                       election_cid )
        REFERENCES election ( election_id,
                              election_cid )
            ON DELETE CASCADE;

ALTER TABLE registrations
    ADD CONSTRAINT registers_voter_fk FOREIGN KEY ( voter_uid,
                                                    voter_id )
        REFERENCES voter ( user_id,
                           voter_id )
            ON DELETE CASCADE;

ALTER TABLE person
    ADD CONSTRAINT user_about_us_fk FOREIGN KEY ( abtus_id )
        REFERENCES aboutus ( abtus_id )
            ON DELETE CASCADE;

ALTER TABLE vote
    ADD CONSTRAINT vote_election_fk FOREIGN KEY ( election_id,
                                                  election_cid )
        REFERENCES election ( election_id,
                              election_cid )
            ON DELETE CASCADE;

ALTER TABLE vote
    ADD CONSTRAINT vote_voter_fk FOREIGN KEY ( user_id,
                                               voter_id )
        REFERENCES voter ( user_id,
                           voter_id )
            ON DELETE CASCADE;

ALTER TABLE voter
    ADD CONSTRAINT voter_user_fk FOREIGN KEY ( user_id,
                                               utype_id )
        REFERENCES person ( user_id,
                            utype_id )
            ON DELETE CASCADE;

CREATE OR REPLACE TRIGGER arc_fkarc_2_moderator BEFORE
    INSERT OR UPDATE OF user_id, utype_id ON moderator
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.user_type
    INTO d
    FROM
        person a
    WHERE
            a.user_id = :new.user_id
        AND a.utype_id = :new.utype_id;

    IF ( d IS NULL OR d <> 'Moderator' ) THEN
        raise_application_error(-20223, 'FK Moderator_User_FK in Table Moderator violates Arc constraint on Table Person - discriminator column User_TYPE doesn''t have value ''Moderator''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_group_admin BEFORE
    INSERT OR UPDATE OF user_id, utype_id ON group_admin
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.user_type
    INTO d
    FROM
        person a
    WHERE
            a.user_id = :new.user_id
        AND a.utype_id = :new.utype_id;

    IF ( d IS NULL OR d <> 'Group_Admin' ) THEN
        raise_application_error(-20223, 'FK Group_Admin_User_FK in Table Group_Admin violates Arc constraint on Table Person - discriminator column User_TYPE doesn''t have value ''Group_Admin''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_candidate BEFORE
    INSERT OR UPDATE OF user_id, utype_id ON candidate
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.user_type
    INTO d
    FROM
        person a
    WHERE
            a.user_id = :new.user_id
        AND a.utype_id = :new.utype_id;

    IF ( d IS NULL OR d <> 'Candidate' ) THEN
        raise_application_error(-20223, 'FK Candidate_User_FK in Table Candidate violates Arc constraint on Table Person - discriminator column User_TYPE doesn''t have value ''Candidate''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_2_voter BEFORE
    INSERT OR UPDATE OF user_id, utype_id ON voter
    FOR EACH ROW
DECLARE
    d VARCHAR2(11);
BEGIN
    SELECT
        a.user_type
    INTO d
    FROM
        person a
    WHERE
            a.user_id = :new.user_id
        AND a.utype_id = :new.utype_id;

    IF ( d IS NULL OR d <> 'Voter' ) THEN
        raise_application_error(-20223, 'FK Voter_User_FK in Table Voter violates Arc constraint on Table Person - discriminator column User_TYPE doesn''t have value ''Voter''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_referendum BEFORE
    INSERT OR UPDATE OF election_cid ON referendum
    FOR EACH ROW
DECLARE
    d VARCHAR2(12);
BEGIN
    SELECT
        a.category_type
    INTO d
    FROM
        e_category a
    WHERE
        a.category_id = :new.election_cid;

    IF ( d IS NULL OR d <> 'Referendum' ) THEN
        raise_application_error(-20223, 'FK Referendum_Category_FK in Table Referendum violates Arc constraint on Table E_Category - discriminator column Category_TYPE doesn''t have value ''Referendum''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_custom BEFORE
    INSERT OR UPDATE OF election_cid ON custom
    FOR EACH ROW
DECLARE
    d VARCHAR2(12);
BEGIN
    SELECT
        a.category_type
    INTO d
    FROM
        e_category a
    WHERE
        a.category_id = :new.election_cid;

    IF ( d IS NULL OR d <> 'Custom' ) THEN
        raise_application_error(-20223, 'FK Custom_Category_FK in Table Custom violates Arc constraint on Table E_Category - discriminator column Category_TYPE doesn''t have value ''Custom''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_organizations BEFORE
    INSERT OR UPDATE OF election_cid ON organizations
    FOR EACH ROW
DECLARE
    d VARCHAR2(12);
BEGIN
    SELECT
        a.category_type
    INTO d
    FROM
        e_category a
    WHERE
        a.category_id = :new.election_cid;

    IF ( d IS NULL OR d <> 'Organization' ) THEN
        raise_application_error(-20223, 'FK Organization_Category_FK in Table Organizations violates Arc constraint on Table E_Category - discriminator column Category_TYPE doesn''t have value ''Organization''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_1_government BEFORE
    INSERT OR UPDATE OF election_cid ON government
    FOR EACH ROW
DECLARE
    d VARCHAR2(12);
BEGIN
    SELECT
        a.category_type
    INTO d
    FROM
        e_category a
    WHERE
        a.category_id = :new.election_cid;

    IF ( d IS NULL OR d <> 'Government' ) THEN
        raise_application_error(-20223, 'FK Government_Category_FK in Table Government violates Arc constraint on Table E_Category - discriminator column Category_TYPE doesn''t have value ''Government''');
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE SEQUENCE AboutUs_abtus_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER AboutUs_abtus_ID_TRG 
BEFORE INSERT ON AboutUs 
FOR EACH ROW 
WHEN (NEW.abtus_ID IS NULL) 
BEGIN
:new.abtus_id := aboutus_abtus_id_seq.nextval;

end;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            23
-- CREATE INDEX                             1
-- ALTER TABLE                             61
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           9
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
